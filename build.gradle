import java.util.regex.Pattern
buildscript {
    repositories {
        maven { url "https://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.10.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'

class Version
{
	String mVersion
}
Version ver = new Version();

task increaseVersion (){
	println(":incrementVersionCode - Incrementing Version Code...")
	//TODO: we should move it to remote.
	def versionFile = file("version.txt")
	def patternVersionCode = Pattern.compile("versionCode=\"(\\d+)\"")
	def versionText = versionFile.getText();
	def matcherVersionCode = patternVersionCode.matcher(versionText)
    matcherVersionCode.find()
    def versionCode = Integer.parseInt(matcherVersionCode.group(1))
    def nextVersionCode = versionCode + 1
    def nextVersionContent = matcherVersionCode.replaceAll("versionCode=\"" + nextVersionCode + "\"")
	versionFile.write(nextVersionContent);
	ver.mVersion = nextVersionCode;
}

war {
    baseName = 'LogpieShopping'
    version =  '1.0.' + ver.mVersion
}

jar {
    baseName = 'gs-serving-web-content'
    version =  '0.1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
}

configurations {
    providedRuntime
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    testCompile("junit:junit")
    compile("mysql:mysql-connector-java:5.1.16")
    compile("org.springframework:spring-jdbc")
    compile("org.json:json:20090211")
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

